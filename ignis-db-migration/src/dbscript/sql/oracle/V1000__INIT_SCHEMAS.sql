CREATE SEQUENCE "HIBERNATE_SEQUENCE" INCREMENT BY 1 START WITH 10000 CACHE 10000 NOCYCLE;
CREATE TABLE BATCH_JOB_INSTANCE (
  JOB_INSTANCE_ID NUMBER(19, 0) NOT NULL PRIMARY KEY,
  VERSION         NUMBER(19, 0),
  JOB_NAME        VARCHAR2(100) NOT NULL,
  JOB_KEY         VARCHAR2(32)  NOT NULL,
  CONSTRAINT "JOB_INST_UN" UNIQUE (JOB_NAME, JOB_KEY)
);

CREATE TABLE BATCH_JOB_EXECUTION (
  JOB_EXECUTION_ID           NUMBER(19, 0) NOT NULL PRIMARY KEY,
  VERSION                    NUMBER(19, 0),
  JOB_INSTANCE_ID            NUMBER(19, 0) NOT NULL,
  CREATE_TIME                TIMESTAMP     NOT NULL,
  START_TIME                 TIMESTAMP DEFAULT NULL,
  END_TIME                   TIMESTAMP DEFAULT NULL,
  STATUS                     VARCHAR(10),
  EXIT_CODE                  VARCHAR(2500),
  EXIT_MESSAGE               VARCHAR(2500),
  LAST_UPDATED               TIMESTAMP,
  JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
  CONSTRAINT JOB_INST_EXEC_FK FOREIGN KEY (JOB_INSTANCE_ID) REFERENCES BATCH_JOB_INSTANCE (JOB_INSTANCE_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
  JOB_EXECUTION_ID NUMBER(19, 0) NOT NULL,
  TYPE_CD          VARCHAR(6)    NOT NULL,
  KEY_NAME         VARCHAR(100)  NOT NULL,
  STRING_VAL       VARCHAR(250),
  DATE_VAL         TIMESTAMP DEFAULT NULL,
  LONG_VAL         NUMBER(19, 0),
  DOUBLE_VAL       NUMBER,
  IDENTIFYING      CHAR(1)       NOT NULL,
  CONSTRAINT JOB_EXEC_PARAMS_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION (JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION (
  STEP_EXECUTION_ID  NUMBER(19, 0) NOT NULL PRIMARY KEY,
  VERSION            NUMBER(19, 0) NOT NULL,
  STEP_NAME          VARCHAR(100)  NOT NULL,
  JOB_EXECUTION_ID   NUMBER(19, 0) NOT NULL,
  START_TIME         TIMESTAMP     NOT NULL,
  END_TIME           TIMESTAMP DEFAULT NULL,
  STATUS             VARCHAR(10),
  COMMIT_COUNT       NUMBER(19, 0),
  READ_COUNT         NUMBER(19, 0),
  FILTER_COUNT       NUMBER(19, 0),
  WRITE_COUNT        NUMBER(19, 0),
  READ_SKIP_COUNT    NUMBER(19, 0),
  WRITE_SKIP_COUNT   NUMBER(19, 0),
  PROCESS_SKIP_COUNT NUMBER(19, 0),
  ROLLBACK_COUNT     NUMBER(19, 0),
  EXIT_CODE          VARCHAR(2500),
  EXIT_MESSAGE       VARCHAR(2500),
  LAST_UPDATED       TIMESTAMP,
  CONSTRAINT JOB_EXEC_STEP_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION (JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
  STEP_EXECUTION_ID  NUMBER(19, 0) NOT NULL PRIMARY KEY,
  SHORT_CONTEXT      VARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT CLOB,
  CONSTRAINT STEP_EXEC_CTX_FK FOREIGN KEY (STEP_EXECUTION_ID) REFERENCES BATCH_STEP_EXECUTION (STEP_EXECUTION_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
  JOB_EXECUTION_ID   NUMBER(19, 0) NOT NULL PRIMARY KEY,
  SHORT_CONTEXT      VARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT CLOB,
  CONSTRAINT JOB_EXEC_CTX_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION (JOB_EXECUTION_ID)
);

CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE SEQUENCE BATCH_JOB_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;

CREATE TABLE SVC_SERVICE_REQUEST (
  ID                            NUMBER(19, 0) NOT NULL PRIMARY KEY,
  MESSAGE_ID                    VARCHAR(255) DEFAULT NULL,
  SENDER_SYSTEM_ID              VARCHAR(255) DEFAULT NULL,
  RECEIVER_SERVICE_NAME         VARCHAR(255) DEFAULT NULL,
  CORRELATION_ID                VARCHAR(255) DEFAULT NULL,
  NAME                          VARCHAR(255)  NOT NULL,
  CREATED_BY                    VARCHAR(255),
  YARN_APPLICATION_TRACKING_URL VARCHAR(255),
  REQUEST_MESSAGE               CLOB,
  JOB_EXECUTION_ID              NUMBER(19, 0),
  IS_DELETED                    NUMBER(1, 0),
  REQUEST_TYPE                  VARCHAR(50)
);

CREATE TABLE DATASET_SCHEMA (
  ID           NUMBER(19, 0) NOT NULL PRIMARY KEY,
  NAME         VARCHAR(255),
  CREATED_BY   VARCHAR(50),
  CREATED_TIME TIMESTAMP,
  CONSTRAINT DATASET_SCHEMA_UNIQUE UNIQUE (NAME)
);


CREATE TABLE DATASET_SCHEMA_FIELD (
  ID                 NUMBER(19, 0) NOT NULL PRIMARY KEY,
  NAME               VARCHAR(255),
  FIELD_TYPE         VARCHAR(50),
  IS_KEY             NUMBER(1, 0),
  NULLABLE           NUMBER(1, 0),
  DATASET_SCHEMA_ID  NUMBER(19, 0) NOT NULL,
  DATE_FORMAT        VARCHAR(50),
  DEC_SCALE          INT,
  DEC_PRECISION      INT,
  MAX_LENGTH         INTEGER,
  MIN_LENGTH         INTEGER,
  REGULAR_EXPRESSION VARCHAR(100),
  CONSTRAINT DATASET_SCHEMA_FIELD_UNIQUE UNIQUE (DATASET_SCHEMA_ID, NAME),
  CONSTRAINT DATASET_SCHEMA_FIELD_FK FOREIGN KEY (DATASET_SCHEMA_ID) REFERENCES DATASET_SCHEMA (ID)
);

CREATE TABLE STAGING_DATA_SET (
  ID                    NUMBER(19, 0) NOT NULL PRIMARY KEY,
  END_TIME              TIMESTAMP     DEFAULT NULL,
  LAST_UPDATE_TIME      TIMESTAMP     DEFAULT NULL,
  MESSAGE               CLOB,
  TABLE_NAME            VARCHAR(100)  DEFAULT NULL,
  STAGING_FILE          VARCHAR(2000),
  DATASET               VARCHAR(100),
  START_TIME            TIMESTAMP     DEFAULT NULL,
  STATUS                VARCHAR(20)   DEFAULT NULL,
  VALIDATION_ERROR_FILE VARCHAR(2000),
  JOB_EXECUTION_ID      NUMBER(19, 0) DEFAULT NULL,
  METADATA_KEY          VARCHAR(64)   NOT NULL,
  METADATA_CONTENT      CLOB,
  CONSTRAINT STAGING_DATA_SET_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES SVC_SERVICE_REQUEST (ID)
);


CREATE TABLE DATASET (
  ID               NUMBER(19, 0) NOT NULL PRIMARY KEY,
  JOB_EXECUTION_ID NUMBER(19, 0),
  NAME             VARCHAR(255),
  TABLE_NAME       VARCHAR(2000),
  DATASET_TYPE     VARCHAR(20),
  CREATED_TIME     TIMESTAMP,
  METADATA_KEY     VARCHAR(64)   NOT NULL,
  METADATA_CONTENT CLOB,
  RECORDS_COUNT    NUMBER(19, 0),
  PREDICATE        VARCHAR(255),
  CONSTRAINT DATASET_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES SVC_SERVICE_REQUEST (ID)
);

CREATE TABLE DATA_QUALITY_CHECK_EXECUTION (
  ID                   NUMBER(19, 0) NOT NULL PRIMARY KEY,
  JOB_EXECUTION_ID     NUMBER(19, 0),
  NAME                 VARCHAR(255),
  DESCRIPTION          VARCHAR(2000),
  STATUS               VARCHAR(20),
  START_TIME           TIMESTAMP,
  LAST_UPDATE_TIME     TIMESTAMP,
  END_TIME             TIMESTAMP,
  FAILED_RECORD_NUMBER NUMBER(19, 0),
  TARGET_FILE          VARCHAR(2000),
  CONSTRAINT DQ_CHECK_EXECUTION_FK FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES SVC_SERVICE_REQUEST (ID)
);

CREATE TABLE SEC_USER (
  ID       NUMBER(19, 0) NOT NULL PRIMARY KEY,
  USERNAME VARCHAR(255),
  PASSWORD VARCHAR(255),
  CONSTRAINT "UNIQUE_USERNAME_CONSTRAINT" UNIQUE (USERNAME)
);

${H2_MODE_FLAG}GRANT SELECT ON HIBERNATE_SEQUENCE TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT ON BATCH_STEP_EXECUTION_SEQ TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT ON BATCH_JOB_EXECUTION_SEQ TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT ON BATCH_JOB_SEQ TO ${USER_APP_RW_ROLE};

${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON BATCH_JOB_INSTANCE TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON BATCH_JOB_EXECUTION TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON BATCH_JOB_EXECUTION_PARAMS TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON BATCH_STEP_EXECUTION TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON BATCH_STEP_EXECUTION_CONTEXT TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON BATCH_JOB_EXECUTION_CONTEXT TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON SVC_SERVICE_REQUEST TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON DATASET_SCHEMA TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON DATASET_SCHEMA_FIELD TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON STAGING_DATA_SET TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON DATASET TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON DATA_QUALITY_CHECK_EXECUTION TO ${USER_APP_RW_ROLE};
${H2_MODE_FLAG}GRANT SELECT, INSERT, UPDATE, DELETE ON SEC_USER TO ${USER_APP_RW_ROLE};

INSERT INTO SEC_USER (ID, USERNAME, PASSWORD)
VALUES (HIBERNATE_SEQUENCE.nextval, 'InternalJobUser', '$2a$10$Sx9ZeuLzTiBJR1GKm51jJ.khLOxKTm/A/yt3DyWRaYVMa0rfV3Tei');
INSERT INTO SEC_USER (ID, USERNAME, PASSWORD) VALUES (HIBERNATE_SEQUENCE.nextval, '${ADMIN_USER}', '${ADMIN_PASSWORD}');