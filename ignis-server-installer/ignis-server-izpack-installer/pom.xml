<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>com.lombardrisk</groupId>
    <artifactId>ignis-server-installer</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>ignis-server-izpack-installer</artifactId>
  <packaging>izpack-jar</packaging>

  <properties>
    <skip.integration.tests>true</skip.integration.tests>
    <skip.unit.tests>true</skip.unit.tests>
    <jacoco.skip>true</jacoco.skip>

    <flyway.driver.oracle.artifact>ojdbc8</flyway.driver.oracle.artifact>
    <flyway.driver.mssql.artifact>mssql-jdbc</flyway.driver.mssql.artifact>
    <flyway.driver.mysql.artifact>mysql-connector-java</flyway.driver.mysql.artifact>
    <flyway.driver.h2.artifact>h2</flyway.driver.h2.artifact>
    <flyway.driver.h2.version>${h2.version}</flyway.driver.h2.version>

    <installer.archive.descriptor.path>
      ${project.basedir}/../../ignis-core/ignis-izpack-common/src/assembly/installer-archive.xml
    </installer.archive.descriptor.path>

    <installer.out.path>${project.build.directory}/installer</installer.out.path>

    <ignis-server-izpack.artifact>ignis-server-izpack</ignis-server-izpack.artifact>
    <ignis-server.artifact>ignis-server</ignis-server.artifact>
    <ignis-server.classifier>exec</ignis-server.classifier>

    <installer.src.izpack.path>${project.basedir}/src/main/izpack</installer.src.izpack.path>

    <installer.src.path>${project.basedir}/src/main/installer</installer.src.path>
    <installer.scripts.path>${project.basedir}/../../ignis-core/ignis-izpack-common/src/scripts</installer.scripts.path>

    <installer.out.flyway.path>${installer.out.path}/${izpack.dist.flyway.dir}</installer.out.flyway.path>
    <flyway.scripts.path>${project.basedir}/../../ignis-db-migration/src/dbscript/sql</flyway.scripts.path>
    <flyway.jar.path>${project.basedir}/../../ignis-db-migration/target/ignis-db-migration-${project.version}.jar</flyway.jar.path>

    <installer.out.ignis.path>${installer.out.path}/${izpack.dist.ignis.dir}</installer.out.ignis.path>
    <ignis-ui.dist.path>../../ignis-ui/dist</ignis-ui.dist.path>

    <!--Used in IzPack install.xml-->
    <izpack.app.version>${project.version}</izpack.app.version>

    <izpack.dist.flyway.dir>flyway-${flyway.version}</izpack.dist.flyway.dir>
    <izpack.dist.ignis.dir>ignis-server-${project.version}</izpack.dist.ignis.dir>

    <izpack.ignis.installer.jar>
      ${project.basedir}/../ignis-server-izpack/target/${ignis-server-izpack.artifact}-${project.version}-jar-with-dependencies.jar
    </izpack.ignis.installer.jar>
    <izpack.ignis.server.jar>ignis-server-exec.jar</izpack.ignis.server.jar>
    <izpack.spark.staging.jar>ignis-spark-staging.jar</izpack.spark.staging.jar>
    <izpack.spark.validation.jar>ignis-spark-validation.jar</izpack.spark.validation.jar>
    <izpack.spark.pipeline.jar>ignis-spark-pipeline.jar</izpack.spark.pipeline.jar>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>download and unpack ${izpack.dist.flyway.dir}</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>
                http://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${flyway.version}/flyway-commandline-${flyway.version}.zip
              </url>
              <outputDirectory>${installer.out.path}</outputDirectory>
              <unpack>true</unpack>
            </configuration>
          </execution>
          <execution>
            <id>download and unpack ${spark.dir}</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>http://archive.apache.org/dist/spark/spark-${spark.version}/${spark.dir}.tgz</url>
              <unpack>true</unpack>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>setup scripts</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${installer.out.path}" overwrite="true">
                  <fileset dir="${installer.scripts.path}" />
                </copy>
                <copy todir="${installer.out.path}" overwrite="true">
                  <file name="${installer.src.path}/post-install.sh" />
                </copy>
                <copy todir="${installer.out.path}/bin" overwrite="true">
                  <fileset dir="${installer.src.path}/bin" />
                </copy>
                <replace file="${installer.out.path}/install.sh"
                         token="#APP_SUBPATH"
                         value="ignis-server/${project.version}" />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>setup ${izpack.dist.flyway.dir}</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${installer.out.path}/${izpack.dist.flyway.dir}" overwrite="true">
                  <fileset dir="${installer.src.path}/flyway" />
                </copy>
                <copy todir="${installer.out.flyway.path}/sql" overwrite="true">
                  <fileset dir="${flyway.scripts.path}" />
                </copy>
                <copy file="${flyway.jar.path}" todir="${installer.out.flyway.path}/jars" />
                <delete dir="${installer.out.flyway.path}/drivers" />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>setup ${izpack.dist.ignis.dir}</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete dir="${installer.out.ignis.path}/ui" />
                <mkdir dir="${installer.out.ignis.path}/ui" />
                <copy todir="${installer.out.ignis.path}/ui" overwrite="true">
                  <fileset dir="${ignis-ui.dist.path}" />
                </copy>
                <copy todir="${installer.out.path}/${izpack.dist.ignis.dir}" overwrite="true">
                  <fileset dir="${installer.src.path}/${ignis-server.artifact}" />
                </copy>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>add ${izpack.dist.ignis.dir} libs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <zip destfile="${installer.out.ignis.path}/lib/__spark_libs__.zip">
                  <fileset dir="${project.build.directory}/${spark.dir}/jars" />
                  <fileset dir="${project.basedir}/../../ignis-phoenix-client/target"
                           includes="ignis-phoenix-${phoenix.version}-client.jar" />
                </zip>
                <checksum file="${installer.out.ignis.path}/lib/__spark_libs__.zip" />
                <copy todir="${installer.out.ignis.path}/lib" overwrite="true">
                  <file
                      name="${project.basedir}/../../ignis-spark/ignis-spark-staging/target/${izpack.spark.staging.jar}" />
                </copy>
                <copy todir="${installer.out.ignis.path}/lib" overwrite="true">
                  <file
                      name="${project.basedir}/../../ignis-spark/ignis-spark-validation/target/${izpack.spark.validation.jar}" />
                </copy>
                <copy todir="${installer.out.ignis.path}/lib" overwrite="true">
                  <file
                      name="${project.basedir}/../../ignis-spark/ignis-spark-pipeline/target/${izpack.spark.pipeline.jar}" />
                </copy>
                <copy todir="${installer.out.ignis.path}/lib" overwrite="true">
                  <file
                      name="${project.basedir}/../../ignis-server-parent/ignis-server/target/${izpack.ignis.server.jar}" />
                </copy>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>setup IzPack staging config</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${installer.out.path}" overwrite="true">
                  <fileset dir="${installer.src.izpack.path}" />
                </copy>
                <touch file="${installer.out.path}/${project.build.finalName}.defaults" />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>cleanup IzPack config</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete dir="${installer.out.path}/bin" />
                <delete dir="${installer.out.path}/lang" />
                <delete dir="${installer.out.path}/panel" />
                <delete file="${installer.out.path}/system.properties" />
                <delete file="${installer.out.path}/install.xml" />
                <delete file="${installer.out.path}/post-install.sh" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy ${izpack.dist.flyway.dir} jdbc drivers</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${installer.out.flyway.path}/drivers</outputDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>com.h2database</groupId>
                  <artifactId>${flyway.driver.h2.artifact}</artifactId>
                  <version>${flyway.driver.h2.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>com.oracle</groupId>
                  <artifactId>${flyway.driver.oracle.artifact}</artifactId>
                  <version>${oracle.jdbc.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>com.microsoft.sqlserver</groupId>
                  <artifactId>${flyway.driver.mssql.artifact}</artifactId>
                  <version>${mssqlserver.jdbc.version}</version>
                </artifactItem>
                <artifactItem>
                  <groupId>mysql</groupId>
                  <artifactId>${flyway.driver.mysql.artifact}</artifactId>
                  <version>${mysql.version}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.izpack</groupId>
        <artifactId>izpack-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <baseDir>${installer.out.path}</baseDir>
          <installFile>${installer.src.izpack.path}/install.xml</installFile>
          <outputDirectory>${installer.out.path}</outputDirectory>
          <finalName>${project.build.finalName}</finalName>
          <mkdirs>true</mkdirs>
          <autoIncludeUrl>false</autoIncludeUrl>
          <autoIncludeDevelopers>false</autoIncludeDevelopers>
          <enableAttachArtifact>false</enableAttachArtifact>
        </configuration>
        <executions>
          <execution>
            <id>default-izpack</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>izpack</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local</id>
      <properties>
        <spark.dir>spark-${spark.version}-bin-hadoop2.7</spark.dir>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>archive</id>
      <properties>
        <spark.dir>spark-${spark.version}-bin-without-hadoop</spark.dir>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>pack installer</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>fcr-engine-ignis-server-${project.version}</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>${installer.archive.descriptor.path}</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
